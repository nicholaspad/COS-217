Assignment 2 readme File

------------------------------------------------------------------------
What is your name?

Nicholas Padmanabhan

------------------------------------------------------------------------
How many late days are you using on this assignment?

0

------------------------------------------------------------------------
What authorized sources of information did you use to complete
the assignment? COPY THE LIST of authorized sources of information
given in the "Policies" web page to this section of the readme file,
and edit it as appropriate.

The course's lectures.
The course's precepts.
The course's website.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

Very helpful and quite fun! I learned a ton about using pointers with
strings. It's a valuable exercise being able to do a task two different
ways (array notation and pointer notation).

------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?

N/A

------------------------------------------------------------------------
What warnings does splint generate on stra.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on stra.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None

------------------------------------------------------------------------
What warnings does splint generate on strp.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on strp.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None

------------------------------------------------------------------------
What warnings does splint generate on replace.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."

None

------------------------------------------------------------------------
What warnings does critTer generate on replace.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

None

------------------------------------------------------------------------
Is it possible for Str_copy or Str_concat to call assert to verify
that the destination memory area specified by the caller is large
enough? Explain.

No. Strings (char arrays) are passed to functions (e.g. Str_copy and
Str_concat) as pointers to their first char. So, calling sizeof(pDest)
within any function, where pDest is a pointer to the first char of the
destination string, will always result in 8 or 4 depending on whether
the computer is 64 or 32-bit. Also, calling sizeof(*pDest) will
always result in 1, because chars are 1 byte in C.

Further, it is impossible to determine the destination memory size by
finding the length of the destination string (i.e. using Str_length) and
adding 1 (to count the terminating null char). The destination string
may contain any number of null chars (e.g. "h\0ello"), but Str_length
will halt when it encounters the first null char even if there are more
chars afterward. Thus, the length of the destination string as
determined by Str_length does not necessarily tell us the size of the
destination memory area.

Therefore, there is no way to call assert within Str_copy or Str_concat
to verify that the size of the destination memory area is large enough.

------------------------------------------------------------------------
